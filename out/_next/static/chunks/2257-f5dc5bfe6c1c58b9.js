"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2257],{32257:function(t,e,a){a.d(e,{V:function(){return d}});var o=a(99724),n=a(97042);const d=new class{async getUserContacts(t){try{const e=(0,o.hJ)(n.db,this.collectionName),a=(0,o.IO)(e,(0,o.ar)("addedBy","==",t),(0,o.Xo)("createdAt","desc"));return(await(0,o.PL)(a)).docs.filter((t=>!t.data().isDeleted)).map((t=>{var e,a,o;return{id:t.id,...t.data(),createdAt:(null===(e=t.data().createdAt)||void 0===e?void 0:e.toDate())||new Date,updatedAt:(null===(a=t.data().updatedAt)||void 0===a?void 0:a.toDate())||new Date,lastSeen:null===(o=t.data().lastSeen)||void 0===o?void 0:o.toDate()}}))}catch(e){throw e}}async getDeletedContacts(t){try{const e=(0,o.hJ)(n.db,this.collectionName),a=(0,o.IO)(e,(0,o.ar)("addedBy","==",t),(0,o.Xo)("createdAt","desc"));return(await(0,o.PL)(a)).docs.filter((t=>!0===t.data().isDeleted)).sort(((t,e)=>{var a,o,n,d;const i=(null===(o=t.data().deletedAt)||void 0===o||null===(a=o.toDate)||void 0===a?void 0:a.call(o))||new Date(0);return((null===(d=e.data().deletedAt)||void 0===d||null===(n=d.toDate)||void 0===n?void 0:n.call(d))||new Date(0)).getTime()-i.getTime()})).map((t=>{var e,a,o,n;return{id:t.id,...t.data(),createdAt:(null===(e=t.data().createdAt)||void 0===e?void 0:e.toDate())||new Date,updatedAt:(null===(a=t.data().updatedAt)||void 0===a?void 0:a.toDate())||new Date,lastSeen:null===(o=t.data().lastSeen)||void 0===o?void 0:o.toDate(),deletedAt:null===(n=t.data().deletedAt)||void 0===n?void 0:n.toDate()}}))}catch(e){throw e}}async getContact(t){try{var e,a,d;const i=(0,o.JU)(n.db,this.collectionName,t),c=await(0,o.QT)(i);return c.exists()?{id:c.id,...c.data(),createdAt:(null===(e=c.data().createdAt)||void 0===e?void 0:e.toDate())||new Date,updatedAt:(null===(a=c.data().updatedAt)||void 0===a?void 0:a.toDate())||new Date,lastSeen:null===(d=c.data().lastSeen)||void 0===d?void 0:d.toDate()}:null}catch(i){throw i}}async addContact(t){try{const e=(0,o.hJ)(n.db,this.collectionName);return(await(0,o.ET)(e,{...t,createdAt:o.EK.now(),updatedAt:o.EK.now()})).id}catch(e){throw e}}async addContactsBatch(t){try{const e=(0,o.qs)(n.db),a=[];return t.forEach((t=>{const d=(0,o.JU)((0,o.hJ)(n.db,this.collectionName));a.push(d.id),e.set(d,{...t,createdAt:o.EK.now(),updatedAt:o.EK.now()})})),await e.commit(),a}catch(e){throw e}}async updateContact(t,e){try{const a=(0,o.JU)(n.db,this.collectionName,t),d={};Object.entries(e).forEach((t=>{let[e,a]=t;"id"!==e&&"createdAt"!==e&&"addedBy"!==e&&void 0!==a&&(a instanceof Date?d[e]=o.EK.fromDate(a):d[e]=a)})),d.updatedAt=o.EK.now(),await(0,o.r7)(a,d)}catch(a){throw a}}async deleteContact(t,e){try{const a=(0,o.JU)(n.db,this.collectionName,t),d=null!==e&&void 0!==e?e:null;await(0,o.r7)(a,{isDeleted:!0,deletedAt:o.EK.now(),deletedBy:d,updatedAt:o.EK.now()})}catch(a){throw a}}async restoreContact(t){try{const e=(0,o.JU)(n.db,this.collectionName,t);await(0,o.r7)(e,{isDeleted:!1,deletedAt:null,deletedBy:null,updatedAt:o.EK.now()})}catch(e){throw e}}async permanentlyDeleteContact(t){try{const e=(0,o.JU)(n.db,this.collectionName,t);await(0,o.oe)(e)}catch(e){throw e}}async updateSonnyStatus(t,e){try{const a=(0,o.JU)(n.db,this.collectionName,t);await(0,o.r7)(a,{sonnyStatus:e,lastSeen:o.EK.now(),updatedAt:o.EK.now()})}catch(a){throw a}}async getContactsByStatus(t,e){try{const a=(0,o.hJ)(n.db,this.collectionName),d=(0,o.IO)(a,(0,o.ar)("addedBy","==",t),(0,o.ar)("sonnyStatus","==",e));return(await(0,o.PL)(d)).docs.map((t=>{var e,a,o;return{id:t.id,...t.data(),createdAt:(null===(e=t.data().createdAt)||void 0===e?void 0:e.toDate())||new Date,updatedAt:(null===(a=t.data().updatedAt)||void 0===a?void 0:a.toDate())||new Date,lastSeen:null===(o=t.data().lastSeen)||void 0===o?void 0:o.toDate()}}))}catch(a){throw a}}async markInvitationSent(t){try{const e=(0,o.JU)(n.db,this.collectionName,t);await(0,o.r7)(e,{invitationSent:!0,invitationSentDate:o.EK.now(),updatedAt:o.EK.now()})}catch(e){throw e}}async markInvitationAccepted(t){try{const e=(0,o.JU)(n.db,this.collectionName,t);await(0,o.r7)(e,{invitationAccepted:!0,updatedAt:o.EK.now()})}catch(e){throw e}}async addRelationship(t,e,a){let d=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i=arguments.length>4?arguments[4]:void 0;try{const c=(0,o.qs)(n.db),s=(0,o.JU)((0,o.hJ)(n.db,this.relationshipsCollectionName)),r=s.id;if(c.set(s,{contactId:t,relatedContactId:e,type:a,isBidirectional:d,notes:i||"",createdAt:o.EK.now(),updatedAt:o.EK.now()}),d){const d=this.getInverseRelationshipType(a),s=(0,o.JU)((0,o.hJ)(n.db,this.relationshipsCollectionName));c.set(s,{contactId:e,relatedContactId:t,type:d,isBidirectional:!0,notes:i?"(Inverse) ".concat(i):"",createdAt:o.EK.now(),updatedAt:o.EK.now()})}return await c.commit(),r}catch(c){throw c}}getInverseRelationshipType(t){return{parent:"child",child:"parent",sibling:"sibling",spouse:"spouse",grandchild:"grandparent",grandparent:"grandchild",mentor:"mentee",mentee:"mentor",colleague:"colleague",business_partner:"business_partner",friend:"friend",other:"other"}[t]||"other"}async getContactRelationships(t){try{const e=(0,o.hJ)(n.db,this.relationshipsCollectionName),a=(0,o.IO)(e,(0,o.ar)("contactId","==",t));return(await(0,o.PL)(a)).docs.map((t=>{var e,a;return{id:t.id,...t.data(),createdAt:(null===(e=t.data().createdAt)||void 0===e?void 0:e.toDate())||new Date,updatedAt:(null===(a=t.data().updatedAt)||void 0===a?void 0:a.toDate())||new Date}}))}catch(e){throw e}}async getRelatedContacts(t){try{const e=await this.getContactRelationships(t),a=[];for(const t of e){const e=await this.getContact(t.relatedContactId);e&&a.push({contact:e,relationship:t})}return a}catch(e){throw e}}async getRelationshipsByType(t,e){try{return(await this.getRelatedContacts(t)).filter((t=>t.relationship.type===e))}catch(a){throw a}}async updateRelationship(t,e){try{const a=(0,o.JU)(n.db,this.relationshipsCollectionName,t);await(0,o.r7)(a,{...e,updatedAt:o.EK.now()})}catch(a){throw a}}async removeRelationship(t){try{const e=(0,o.JU)(n.db,this.relationshipsCollectionName,t),a=await(0,o.QT)(e);if(!a.exists())return;const d=(0,o.qs)(n.db),i=a.data();if(d.delete(e),i.isBidirectional){const t=this.getInverseRelationshipType(i.type),e=(0,o.hJ)(n.db,this.relationshipsCollectionName),a=(0,o.IO)(e,(0,o.ar)("contactId","==",i.relatedContactId),(0,o.ar)("relatedContactId","==",i.contactId),(0,o.ar)("type","==",t));(await(0,o.PL)(a)).docs.forEach((t=>d.delete(t.ref)))}await d.commit()}catch(e){throw e}}async updateContactStatus(t,e){try{const a=(0,o.JU)(n.db,this.collectionName,t);await(0,o.r7)(a,{status:e,updatedAt:o.EK.now()})}catch(a){throw a}}async getFamilyMembers(t){try{return(await this.getUserContacts(t)).filter((t=>!0===t.isFamilyMember))}catch(e){throw e}}async getHouseholdMembers(t){try{return(await this.getUserContacts(t)).filter((t=>!0===t.isHouseholdMember))}catch(e){throw e}}async deleteAllNonFamilyContacts(t){const e=new Set(["tina@salatiso.com","kwakhomdeni@gmail.com","spiceinc@gmail.com","mdeninotembac@gmail.com","visasande@gmail.com"]);try{const d=(0,o.hJ)(n.db,this.collectionName),i=(0,o.IO)(d,(0,o.ar)("addedBy","==",t)),c=(await(0,o.PL)(i)).docs.map((t=>({id:t.id,...t.data()})));let s=0,r=0;for(const t of c){const d=(t.emails||[]).map((t=>t.toLowerCase()));if(d.some((t=>e.has(t))))s++;else try{const e=(0,o.JU)(n.db,this.collectionName,t.id);await(0,o.oe)(e),r++}catch(a){}}return{kept:s,deleted:r}}catch(a){throw a}}constructor(){this.collectionName="contacts",this.relationshipsCollectionName="contact_relationships"}};e.Z=d}}]);